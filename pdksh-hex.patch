diff -urN pdksh-5.2.14.org/eval.c pdksh-5.2.14/eval.c
--- pdksh-5.2.14.org/eval.c	2004-04-06 19:24:49.693634088 +0200
+++ pdksh-5.2.14/eval.c	2004-04-06 23:40:11.000000000 +0200
@@ -53,6 +53,8 @@
 				 char *end, int fdo));
 #endif
 
+int expression_evaluation = 0;
+
 /* compile and expand word */
 char *
 substitute(cp, f)
@@ -246,6 +248,7 @@
 				}
 				continue;
 			  case EXPRSUB:
+				expression_evaluation++;
 				word = IFS_WORD;
 				tilde_ok = 0;
 				if (f & DONTRUNCOMMAND) {
@@ -270,6 +273,7 @@
 						*dp++ = *p++;
 					}
 				}
+				expression_evaluation = 0;
 				continue;
 			  case OSUBST: /* ${{#}var{:}[=+-?#%]word} */
 			  /* format is:
diff -urN pdksh-5.2.14.org/sh.h pdksh-5.2.14/sh.h
--- pdksh-5.2.14.org/sh.h	2004-04-06 19:24:49.767622840 +0200
+++ pdksh-5.2.14/sh.h	2004-04-06 23:41:37.000000000 +0200
@@ -376,8 +376,10 @@
 EXTERN	int	subst_exstat;	/* exit status of last $(..)/`..` */
 EXTERN	const char *safe_prompt; /* safe prompt if PS1 substitution fails */
 
+/* pld hack */
+EXTERN	int	expression_evaluation;	/* 1 if $(( )) expression is evaluated */
 
 /*
  * Area-based allocation built on malloc/free
  */
 
 typedef struct Area {
diff -urN pdksh-5.2.14.org/var.c pdksh-5.2.14/var.c
--- pdksh-5.2.14.org/var.c	2004-04-06 19:24:49.761623752 +0200
+++ pdksh-5.2.14/var.c	2004-04-06 23:41:24.000000000 +0200
@@ -439,6 +441,15 @@
 	base = 10;
 	num = 0;
 	neg = 0;
+	if (expression_evaluation && *s == '0' && *(s+1)) {
+	    	s++;
+		if (*s == 'x' || *s == 'X') {
+		    	s++;
+			base = 16;
+		} else
+		    	base = 8;
+		have_base++;
+	}
 	for (c = *s++; c ; c = *s++) {
 		if (c == '-') {
 			neg++;
